[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bcon 147: Special topics in business economics",
    "section": "",
    "text": "Class schedule: Tuesday | 13:00 - 16:00  Instructor: Christopher Llones  e-mail: christopher.llones@vsu.edu.ph  Course credits: 3 units  Number of hours: 3 hrs lectures \n\n\nCourse description\nThis course provides Business Economics majors with the necessary skills for advanced data analytics and visualization using R programming.\n\n\nCourse objectives\n\nDevelop proficiency in R programming with an emphasis on data wrangling and visualization.\nApply advanced data analysis techniques to business economics problems.\nDesign and interpret data visualizations that communicate insights effectively.\nHandle real-world economic datasets and make data-driven decisions.\nComplete a comprehensive capstone project that integrates course concepts.\n\n\n\nCourse outline\n\n\n\n\n\n\n\n\nTopics\nLessons\nDescription\n\n\n\n\nModule 1: Introduction to R programming\n\nOverview of R programming and its application\nIntroduction to R syntax, data types and structures\nReading data into R\nBasic R operation and data manipulation\n\n\nUnderstand the role of R in data analytics for business economics.\nSet up and understand R data types and structures.\nImporting and cleaning data.\nPerform basic operation and data management with R.\n\n\n\nModule 2: Reproducible analysis in R\n\nIntroduction to reproducibility in research\nSetting up and working with Quarto for reproducible reporting\nIntegrating code, text and visualization in quarto document\nHosting and publishing reports on GitHub\n\n\nUnderstand the importance of reproducibility in data analysis\nSet up and use Quarto to create reproducible reports.\nGenerate report with embedded code, text, and visualization in Quarto document.\nGenerate and publish online reports hosted in GitHub.\n\n\n\nModule 3: Data wrangling with R\n\nIntroduction to data wrangling and manipulation\nData manipulation and reshaping\nData merging and joining\nString manipulation and text processing.\n\n\nGrasps the importance of data wrangling in the analysis process.\nApply functions to wrangle and summarize data.\nMerge and join dataset efficiently.\nWrangle and clean textual data.\n\n\n\nModule 4: Introduction to data visualization with ggplot2\n\nThe ggplot2 grammar of graphics.\nDataset and mapping\nGeometries\nStatistical transformation and plotting distribution\nPosition and adjustment scales\nCoordinates and themes\nFacets and custom plots\n\n\nUnderstand the core principles of data visualization and its significance.\nUse ggplot2 package to create foundation plot.\nCustomize visualizations\nDevelop effective visualizations to communicate data insights.\n\n\n\nModule 5: EDA and visualizing relationships and trends\n\nSummary statistics and visualizing distribution.\nCorrelation and regression visualizations.\nInteractive visualization with plotly.\n\n\nPerform summary statistics and visualizations to explore data.\nVisualize and interpret relationships between variables.\nExplore the basics of interactive visualizations using plotly.\n\n\n\nModule 6: Cluster analysis and principal component analysis (PCA)\n\nIntroduction to cluster analysis and techniques.\nIntroduction to principal component analysis.\nCluster analysis and PCA applications.\nReporting and communicating cluster and PCA results.\n\n\nUnderstand the fundamental concepts of cluster analysis and its techniques (e.g., K-mean, hierarchical)\nUnderstand the principles of PCA for dimensionality reduction.\nApply cluster analysis and PCA to real-world business economics problems.\nDevelop skills to effectively communicate findings of cluster analysis and PCA.\n\n\n\nModel 7: Structural equation modeling\n\nIntroduction to SEM.\nBuilding SEM models: path diagrams and model specifications.\nModel specification and estimation for CB and PLS SEM models.\nModel evaluation and diagnostics.\n\n\nUnderstand the fundamental concepts of SEM.\nLearn how to create path diagrams in SEM.\nLearn model specification and apply estimation methods to fit CB and PLS SEM models.\nEvaluate and conduct diagnostics for model specifications and overall fit.\n\n\n\nModule 8: Introduction to text analysis\n\nIntroduction to text data and its significance in business economics.\nText processing: tokenization, stemming, and stop-word\nIntroduction to sentiment analysis\nVisualizing textual data\n\n\nUnderstand the role of text analysis in business economics.\nLearn how to preprocess textual data for analysis.\nConduct sentiment analysis.\nVisualize text data insights.\n\n\n\nModule 9: Time series and forecasting\n\nTime series decomposition and visualization.\nSmoothing techniques\nForecasting\nVisualizing forecasts and uncertainty.\n\n\nDecompose and visualize time series data components.\nApply smoothing techniques to analyze trends and seasonality.\nUse time series models to forecasts economic indicators.\nVisualize forecasts results and communicate uncertainty.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "00-midterm-project.html#instructions",
    "href": "00-midterm-project.html#instructions",
    "title": "Bcon 147",
    "section": "Instructions",
    "text": "Instructions\nWelcome to the midterm project exercise! In this exercise, you will work on a project that involves analyzing employee attrition and performance using the HR Analytics Employee Attrition & Performance dataset. The primary goal is to develop insights into the factors that contribute to employee attrition and provide recommendations for HR interventions that could help reduce attrition and improve overall employee satisfaction and performance.\nDownload the project files using this link: Midterm project files. Be sure to download the entire folder midterm-bcon147-project-exercise. The project files include the dataset and a template Quarto markdown file that you will use to complete the exercise.\nFirst, rename the lastname-firstname.qmd file to your actual last name and first name. For example, if your name is John Doe, the file should be named doe-john.qmd. Afterward, open the R project 20240925-bcon147-project-exercise-1.Rproj by double-clicking the file and render the Quarto markdown file to generate the HTML file.",
    "crumbs": [
      "Topics",
      "Midterm project exercise"
    ]
  },
  {
    "objectID": "00-midterm-project.html#project-overiew",
    "href": "00-midterm-project.html#project-overiew",
    "title": "Bcon 147",
    "section": "Project overiew",
    "text": "Project overiew\nIn this project, we will explore employee attrition and performance using the HR Analytics Employee Attrition & Performance dataset. The primary goal is to develop insights into the factors that contribute to employee attrition. By analyzing a range of factors, including demographic data, job satisfaction, work-life balance, and job role, we aim to help businesses identify key areas where they can improve employee retention.",
    "crumbs": [
      "Topics",
      "Midterm project exercise"
    ]
  },
  {
    "objectID": "00-midterm-project.html#scenario",
    "href": "00-midterm-project.html#scenario",
    "title": "Bcon 147",
    "section": "Scenario",
    "text": "Scenario\nImagine you are working as a data analyst for a mid-sized company that is experiencing high employee turnover, especially among high-performing employees. The company has been facing increased costs related to hiring and training new employees, and management is concerned about the negative impact on productivity and morale. The human resources (HR) team has collected historical employee data and now looks to you for actionable insights. They want to understand why employees are leaving and how to retain talent effectively.\nYour task is to analyze the dataset and provide insights that will help HR prioritize retention strategies. These strategies could include interventions like revising compensation policies, improving job satisfaction, or focusing on work-life balance initiatives. The success of your analysis could lead to significant cost savings for the company and an increase in employee engagement and performance.",
    "crumbs": [
      "Topics",
      "Midterm project exercise"
    ]
  },
  {
    "objectID": "00-midterm-project.html#understanding-data-source",
    "href": "00-midterm-project.html#understanding-data-source",
    "title": "Bcon 147",
    "section": "Understanding data source",
    "text": "Understanding data source\nThe dataset used for this project provides information about employee demographics, performance metrics, and various satisfaction ratings. The dataset is particularly useful for exploring how factors such as job satisfaction, work-life balance, and training opportunities influence employee performance and attrition.\nThis dataset is well-suited for conducting in-depth analysis of employee performance and retention, enabling us to build predictive models that identify the key drivers of employee attrition. Additionally, we can assess the impact of various organizational factors, such as training and work-life balance, on both performance and retention outcomes.\n\n## datatable function from DT package create an HTML widget display of the dataset\n## install DT package if the package is not yet available in your R environment\nreadxl::read_excel(\"dataset/dataset-variable-description.xlsx\") |&gt; \n  DT::datatable()",
    "crumbs": [
      "Topics",
      "Midterm project exercise"
    ]
  },
  {
    "objectID": "00-midterm-project.html#data-wrangling-and-management",
    "href": "00-midterm-project.html#data-wrangling-and-management",
    "title": "Bcon 147",
    "section": "Data wrangling and management",
    "text": "Data wrangling and management\n\nLibraries\n\n\n\n\n\n\nTask: Load the necessary libraries\n\n\n\nBefore we start working on the dataset, we need to load the necessary libraries that will be used for data wrangling, analysis and visualization. Make sure to load the following libraries here. For packages to be installed, you can use the install.packages function. There are packages to be installed later on this project, so make sure to install them as needed and load them here.\n\n\n\n# load all your libraries here\n\n\n\nData importation\n\n\n\n\n\n\nTask 4.1. Merging dataset\n\n\n\n\nImport the two dataset Employee.csv and PerformanceRating.csv. Save the Employee.csv as employee_dta and PerformanceRating.csv as perf_rating_dta.\nMerge the two dataset using the left_join function from dplyr. Use the EmployeeID variable as the varible to join by. You may read more information about the left_join function here.\nSave the merged dataset as hr_perf_dta and display the dataset using the datatable function from DT package.\n\n\n\n\n## import the two data here\n\n\n## merge employee_dta and perf_rating_dta using left_join function.\n## save the merged dataset as hr_perf_dta\n\n\n\n## Use the datatable from DT package to display the merged dataset\n\n\n\nData management\n\n\n\n\n\n\nTask 4.2. Standardizing variable names\n\n\n\n\nUsing the clean_names function from janitor package, standardize the variable names by using the recommended naming of variables.\nSave the renamed variables as hr_perf_dta to update the dataset.\n\n\n\n\n## clean names using the janitor packages and save as hr_perf_dta\n\n\n## display the renamed hr_perf_dta using datatable function\n\n\n\n\n\n\n\nTask 4.2. Recode data entries\n\n\n\n\nCreate a new variable cat_education wherein education is 1 = No formal education; 2 = High school; 3 = Bachelor; 4 = Masters; 5 = Doctorate. Use the case_when function to accomplish this task.\nSimilarly, create new variables cat_envi_sat, cat_job_sat, and cat_relation_sat for environment_satisfaction, job_satisfaction, and relationship_satisfaction, respectively. Re-code the values accordingly as 1 = Very dissatisfied; 2 = Dissatisfied; 3 = Neutral; 4 = Satisfied; and 5 = Very satisfied.\nCreate new variables cat_work_life_balance, cat_self_rating, cat_manager_rating for work_life_balance, self_rating, and manager_rating, respectively. Re-code accordingly as 1 = Unacceptable; 2 = Needs improvement; 3 = Meets expectation; 4 = Exceeds expectation; and 5 = Above and beyond.\nCreate a new variable bi_attrition by transforming attrition variable as a numeric variabe. Re-code accordingly as No = 0, and Yes = 1.\nSave all the changes in the hr_perf_dta. Note that saving the changes with the same name will update the dataset with the new variables created.\n\n\n\n\n## create cat_education\n\n\n\n## create cat_envi_sat,  cat_job_sat, and cat_relation_sat\n\n\n\n\n## create cat_work_life_balance, cat_self_rating, and cat_manager_rating\n\n\n\n\n\n## create bi_attrition\n\n\n\n## print the updated hr_perf_dta using datatable function",
    "crumbs": [
      "Topics",
      "Midterm project exercise"
    ]
  },
  {
    "objectID": "00-midterm-project.html#exploratory-data-analysis",
    "href": "00-midterm-project.html#exploratory-data-analysis",
    "title": "Bcon 147",
    "section": "Exploratory data analysis",
    "text": "Exploratory data analysis\n\nDescriptive statistics of employee attrition\n\n\n\n\n\n\nTask 5.1. Breakdown of attrition by key variables\n\n\n\n\nSelect the variables attrition, job_role, department, age, salary, job_satisfaction, and work_life_balance. Save as attrition_key_var_dta.\nCompute and plot the attrition rate across job_role, department, and age, salary, job_satisfaction, and work_life_balance. To compute for the attrition rate, group the dataset by job role. Afterward, you can use the count function to get the frequency of attrition for each job role and then divide it by the total number of observations. Save the computation as pct_attrition. Do not forget to ungroup before storing the output. Store the output as attrition_rate_job_role.\nPlot for the attrition rate across job_role has been done for you! Study each line of code. You have the freedom to customize your plot accordingly. Show your creativity!\n\n\n\n\n## selecting attrition key variables and save as `attrition_key_var_dta`\n\n\n\n\n## compute the attrition rate across job_role and save as attrition_rate_job_role\n\n\n\n## print attrition_rate_job_role\n\n\n## Plot the attrition rate\n\n\n\nIdentifying attrition key drivers using correlation analysis\n\n\n\n\n\n\nTask 5.2. Conduct a correlation analysis to identify key drivers\n\n\n\n\nConduct a correlation analysis of key variables: bi_attrition, salary, years_at_company, job_satisfaction, manager_rating, and work_life_balance. Use the cor() function to run the correlation analysis. Remove missing values using the na.omit() before running the correlation analysis. Save the output in hr_corr.\nUse a correlation matrix or heatmap to visualize the relationship between these variables and attrition. You can use the GGally package and use the ggcorr function to visualize the correlation heatmap. You may explore this site for more information: ggcorr.\nDiscuss which factors seem most correlated with attrition and what that suggests aobut why employees are leaving.\n\n\n\n\n## conduct correlation of key variables. \n\n\n\n\n## print hr_corr \n\n\n## install GGally package and use ggcorr function to visualize the correlation\n\n\n\n\n\n\n\nDiscussion:\n\n\n\nProvide your discussion here.\n\n\n\n\nPredictive modeling for attrition\n\n\n\n\n\n\nTask 5.3. Predictive modeling for attrition\n\n\n\n\nCreate a logistic regression model to predict employee attrition using the following variables: salary, years_at_company, job_satisfaction, manager_rating, and work_life_balance. Save the model as hr_attrition_glm_model. Print the summary of the model using the summary function.\nInstall the sjPlot package and use the tab_model function to display the summary of the model. You may read the documentation here on how to customize your model summary.\nAlso, use the plot_model function to visualize the model coefficients. You may read the documentation here on how to customize your model visualization.\nDiscuss the results of the logistic regression model and what they suggest about the factors that contribute to employee attrition.\n\n\n\n\n## run a logistic regression model to predict employee attrition\n## save the model as hr_attrition_glm_model\n\n\n\n\n## print the summary of the model using the summary function\n\n\n## install sjPlot package and use tab_model function to display the summary of the model\n\n\n## use plot_model function to visualize the model coefficients\n\n\n\n\n\n\n\nDiscussion:\n\n\n\nProvide your discussion here.\n\n\n\n\nAnalysis of compensation and turnover\n\n\n\n\n\n\nTask 5.4. Analyzing compensation and turnover\n\n\n\n\nCompare the average monthly income of employees who left the company (bi_attrition = 1) and those who stayed (bi_attrition = 0). Use the t.test function to conduct a t-test and determine if there is a significant difference in average monthly income between the two groups. Save the results in a variable called attrition_ttest_results.\nInstall the report package and use the report function to generate a report of the t-test results.\nInstall the ggstatsplot package and use the ggbetweenstats function to visualize the distribution of monthly income for employees who left and those who stayed. Make sure to map the bi_attrition variable to the x argument and the salary variable to the y argument.\nVisualize the salary variable for employees who left and those who stayed using geom_histogram with geom_freqpoly. Make sure to facet the plot by the bi_attrition variable and apply alpha on the histogram plot.\nProvide recommendations on whether revising compensation policies could be an effective retention strategy.\n\n\n\n\n## compare the average monthly income of employees who left and those who stayed\n\n\n\n\n## print the results of the t-test\n\n\n## install the report package and use the report function to generate a report of the t-test results\n\n\n# install ggstatsplot package and use ggbetweenstats function to visualize the distribution of monthly income for employees who left and those who stayed\n\n\n# create histogram and frequency polygon of salary for employees who left and those who stayed\n\n\n\n\n\n\n\nDiscussion:\n\n\n\nProvide your discussion here.\n\n\n\n\nEmployee satisfaction and performance analysis\n\n\n\n\n\n\nTask 5.5. Analyzing employee satisfaction and performance\n\n\n\n\nAnalyze the average performance ratings (both ManagerRating and SelfRating) of employees who left vs. those who stayed. Use the group_by and count functions to calculate the average performance ratings for each group.\nVisualize the distribution of SelfRating for employees who left and those who stayed using a bar plot. Use the ggplot function to create the plot and map the SelfRating variable to the x argument and the bi_attrition variable to the fill argument.\nSimilarly, visualize the distribution of ManagerRating for employees who left and those who stayed using a bar plot. Make sure to map the ManagerRating variable to the x argument and the bi_attrition variable to the fill argument.\nCreate a boxplot of salary by job_satisfaction and bi_attrition to analyze the relationship between salary, job satisfaction, and attrition. Use the geom_boxplot function to create the plot and map the salary variable to the x argument, the job_satisfaction variable to the y argument, and the bi_attrition variable to the fill argument. You need to transform the job_satisfaction and bi_attrition variables into factors before creating the plot or within the ggplot function.\nDiscuss the results of the analysis and provide recommendations for HR interventions based on the findings.\n\n\n\n\n# Analyze the average performance ratings (both ManagerRating and SelfRating) of employees who left vs. those who stayed.\n\n\n# Visualize the distribution of SelfRating for employees who left and those who stayed using a bar plot.\n\n\n# Visualize the distribution of ManagerRating for employees who left and those who stayed using a bar plot.\n\n\n# create a boxplot of salary by job_satisfaction and bi_attrition to analyze the relationship between salary, job satisfaction, and attrition.\n\n\n\n\n\n\n\nDiscussion:\n\n\n\nProvide your discussion here.\n\n\n\n\nWork-life balance and retention strategies\n\n\n\n\n\n\nTask 5.6. Analyzing work-life balance and retention strategies\n\n\n\nAt this point, you are already well aware of the dataset and the possible factors that contribute to employee attrition. Using your R skills, accomplish the following tasks:\n\nAnalyze the distribution of WorkLifeBalance ratings for employees who left versus those who stayed.\nUse visualizations to show the differences.\nAssess whether employees with poor work-life balance are more likely to leave.\n\nYou have the freedom how you will accomplish this task. Be creative and provide insights that will help HR develop effective retention strategies.\n\n\n\n\nRecommendations for HR interventions\n\n\n\n\n\n\nTask 5.7. Recommendations for HR interventions\n\n\n\nBased on the analysis conducted, provide recommendations for HR interventions that could help reduce employee attrition and improve overall employee satisfaction and performance. You may use the following question as guide for your recommendations and discussions.\n\nWhat are the key factors contributing to employee attrition in the company?\nWhich factors are most strongly correlated with attrition?\nWhat strategies could be implemented to improve employee retention and satisfaction?\nHow can HR leverage the insights from the analysis to develop effective retention strategies?\nWhat are the potential benefits of implementing these strategies for the company?",
    "crumbs": [
      "Topics",
      "Midterm project exercise"
    ]
  },
  {
    "objectID": "00-m0-intro-r.html",
    "href": "00-m0-intro-r.html",
    "title": "Intro to R programming",
    "section": "",
    "text": "R objects\nR packages\nReading data in R\nBasic data wrangling\n\nView slides in new window\n\n\n\n\n\n\n\n\n\n\nPresentation keyboard shortcuts\n\n\n\n\n\n\nUse ← and → to navigate through the slides\n\n\nUse F to toggle full screen\n\n\nUse O to view an overview of all slides\n\n\nUse ? to see a list of other shortcuts",
    "crumbs": [
      "Topics",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "00-m0-intro-r.html#topics",
    "href": "00-m0-intro-r.html#topics",
    "title": "Intro to R programming",
    "section": "",
    "text": "R objects\nR packages\nReading data in R\nBasic data wrangling\n\nView slides in new window\n\n\n\n\n\n\n\n\n\n\nPresentation keyboard shortcuts\n\n\n\n\n\n\nUse ← and → to navigate through the slides\n\n\nUse F to toggle full screen\n\n\nUse O to view an overview of all slides\n\n\nUse ? to see a list of other shortcuts",
    "crumbs": [
      "Topics",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "00-m0-intro-r.html#exercises",
    "href": "00-m0-intro-r.html#exercises",
    "title": "Intro to R programming",
    "section": "Exercises",
    "text": "Exercises\n\nInstall R and RStudio on your computer.\nDownload the entire folder 00-module-intro-r from the Google Drive link. For the meantime, keep the folder in your computer and wait for further instructions during the class.\nBefore the class start, open the RStudio and paste the following code in the console to install the required packages. Just click the clipboard icon to copy the code.\n\n\n## install required packages\ninstall.packages(c(\"janitor\", \"readxl\", \"haven\", \"tidyverse\", \"skimr\"))\n\n\n\n\n\n\n\nImportant\n\n\n\nPlease make sure to install the required packages before the class starts, as we may not have a secure internet connection. If you encounter any issues, please let me know.",
    "crumbs": [
      "Topics",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "00-m0-intro-r.html#class-demonstration-in-progress",
    "href": "00-m0-intro-r.html#class-demonstration-in-progress",
    "title": "Intro to R programming",
    "section": "Class demonstration in progress",
    "text": "Class demonstration in progress\n# INTRO TO R AND BASIC DATA WRANGLING ----\n\n## Install packages\n# install.packages(\"readr\")\n# install.packages(c(\"janitor\", \"readxl\", \"haven\", \"tidyverse\", \"skimr\"))\n\n\n# 1. R Packages ----\nlibrary(readr) # reading csv files librar\nlibrary(readxl) # reading excel files\nlibrary(haven) # reading spss, sas, stata files\nlibrary(tidyverse) # load all packages under tidyverse environment\nlibrary(dplyr) # for data wrangling\nlibrary(skimr) # quick exploration of your data\nlibrary(janitor) # quick cleaning of dataset\n\n\n# 2. Set the working directory ----\nsetwd(\"D:/Githu-repository/econ147-special-topic-bcon/econ147-class-exercise-demo/class-demo-exercise/00-module-intro-r\")\n\n\n# 3. Reading data into R ----\n\n## 3.1 CSV files\n### Load swimming_pools.csv files using the read_csv() function\nswimming_data &lt;- read_csv(\"sample_dataset/swimming_pools.csv\") \n\n\n### Load potatoes.csv using read_csv() and read.csv()\n#### Observe the difference in the output\npotatoes_data &lt;- read_csv(\"sample_dataset/potatoes.csv\") \n\n\n\n## 3.2 Excel files\n### Load urban_pop files and use the read_xls() and read_excel() functions\n### Save the data into a variable named urban_pop",
    "crumbs": [
      "Topics",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "00-m0-intro-data-viz-ggplot.html",
    "href": "00-m0-intro-data-viz-ggplot.html",
    "title": "Intro to data visualization using ggplot2",
    "section": "",
    "text": "The grammar of graphics\nDatasets and mapping\nGeometries\nStatistical transformation and plotting distribution\nPosition adjustment and scales\nCoordinates and themes\nFacets and custom plots\nView slides in new window",
    "crumbs": [
      "Topics",
      "Intro to data visualization using ggplot2"
    ]
  },
  {
    "objectID": "00-m0-intro-data-viz-ggplot.html#class-demonstration",
    "href": "00-m0-intro-data-viz-ggplot.html#class-demonstration",
    "title": "Intro to data visualization using ggplot2",
    "section": "Class demonstration",
    "text": "Class demonstration\n# libraries\nlibrary(tidyverse)\nlibrary(babynames)\n\n## select names\nfriends &lt;- babynames %&gt;% \n  filter(year &gt;= 1950,\n         name %in% c(\"Christopher\", \"Dave\", \"Karl\"),\n         sex == \"M\")\n\n## plotting trends\nggplot(data = friends,\n       mapping = aes(x = year, y = n, color = name)) +\n  geom_line(linetype = \"dashed\") +\n  geom_point(size = 4, alpha = 0.5) +\n  scale_y_log10() +\n  theme_minimal() +\n  theme(axis.title = element_text(size = 24),\n        axis.text = element_text(size = 16),\n        legend.text = element_text(size = 16),\n        legend.title = element_text(size = 18)\n        )\n\n\n\n\n\n\n\n\n\n\n# libraries\nlibrary(tidyverse)\n\n## calculating mean hwy per class\nmean_hwy_data &lt;- mpg %&gt;% \n  group_by(class) %&gt;% \n  summarise(mean_hwy = mean(hwy, na.rm = TRUE))\n\nggplot(data = mpg,\n       mapping = aes(x = class, y = hwy, color = class)) +\n  geom_point(position = \"jitter\", size = 3, alpha = 0.5) +\n  geom_point(data = mean_hwy_data, aes(y = mean_hwy), size = 7) +\n  labs(title = \"Fuel consumption per class vehicle\",\n       x = \"Class of vehicle\",\n       y = \"Highway fuel consumption\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 24),\n        axis.title = element_text(size = 24),\n        axis.text = element_text(size = 16),\n        legend.text = element_text(size = 16),\n        legend.title = element_text(size = 18)\n        )\n\n\n\n\n\n\n\n\n\n\n## libraries\nlibrary(tidyverse)\n\n## histogram plot\n\nggplot(data = mpg, \n       mapping = aes(x = displ)) +\n  geom_histogram(bins = 10, fill = \"cadetblue3\", alpha = 0.5) + \n  geom_text(aes(label = after_stat(count)),\n            stat = \"bin\", \n            bins = 10, \n            nudge_y = 2) +\n  theme_minimal() +\n  theme(axis.text = element_text(size = 14),\n        axis.title = element_text(size = 16),\n        legend.text = element_text(size = 14),\n        legend.title = element_text(size = 16)\n        )\n\n\n\n\n\n\n\n\n\n\n## libraries\nlibrary(tidyverse)\n\nggplot(data = mpg, \n       mapping = aes(x = hwy, y = class)) +\n  geom_violin(aes(fill = class),\n              show.legend = FALSE,\n              color = NA,\n              alpha = 0.5) +\n  geom_boxplot(width = 0.2, \n               fill = NA) +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  theme(axis.text = element_text(size = 14),\n        axis.title = element_text(size = 16),\n        legend.text = element_text(size = 14),\n        legend.title = element_text(size = 16)\n        )\n\n\n\n\n\n\n\n\n\n\n# libraries\nlibrary(tidyverse)\n\n# Create some data\ndf &lt;- data.frame(supp=rep(c(\"VC\", \"OJ\"), each=3),\n                dose=rep(c(\"0.5\", \"1\", \"2\"),2),\n                len=c(6.8, 15, 33, 4.2, 10, 29.5))\n\n# barplot\nggplot(df, aes(x = dose, y = len, fill = supp)) + \n  geom_bar(stat = \"identity\",\n           position = \"dodge\",\n           width = 0.5) +\n  scale_fill_brewer(palette = \"Paired\") +\n  theme_minimal()",
    "crumbs": [
      "Topics",
      "Intro to data visualization using ggplot2"
    ]
  },
  {
    "objectID": "00-m0-reproducible-quarto.html",
    "href": "00-m0-reproducible-quarto.html",
    "title": "Reproducible report with Quarto in R",
    "section": "",
    "text": "Introduction to Quarto\nQuarto document elements\nExercise: generating reports\nImproving report\n\nView slides in new window\n\n\n\n\n\nPresentation keyboard shortcuts\n\n\n\nUse ← and → to navigate through the slides\n\n\nUse F to toggle full screen\n\n\nUse O to view an overview of all slides\n\n\nUse ? to see a list of other shortcuts",
    "crumbs": [
      "Topics",
      "Reproducible report with Quarto in R"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]