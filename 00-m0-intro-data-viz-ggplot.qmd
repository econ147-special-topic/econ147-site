---
title: "Intro to data visualization using ggplot2"
---

1.  The grammar of graphics
2.  Datasets and mapping
3.  Geometries
4.  Statistical transformation and plotting distribution
5.  Position adjustment and scales
6.  Coordinates and themes
7.  Facets and custom plots

<a href="https://econ147-special-topic.github.io/econ147-lecture/module-intro-ggplot" target="_blank" class="btn-slides">View slides in new window</a>

::: {.box style="padding-bottom:56.25%; position:relative; display:block; width: 100%"}
<iframe width="100%" height="100%" src="https://econ147-special-topic.github.io/econ147-lecture/module-intro-ggplot" frameborder="0" allowfullscreen style="position:absolute; top:0; left: 0">

</iframe>
:::

#### Presentation keyboard shortcuts

::: text-line-space
<ul>

<li>Use <kbd>←</kbd> and <kbd>→</kbd> to navigate through the slides</li>

<li>Use <kbd>F</kbd> to toggle full screen</li>

<li>Use <kbd>O</kbd> to view an overview of all slides</li>

<li>Use <kbd>?</kbd> to see a list of other shortcuts</li>

</ul>
:::

## Class demonstration


```{.r}
# libraries
library(tidyverse)
library(babynames)

## select names
friends <- babynames %>% 
  filter(year >= 1950,
         name %in% c("Christopher", "Dave", "Karl"),
         sex == "M")

## plotting trends
ggplot(data = friends,
       mapping = aes(x = year, y = n, color = name)) +
  geom_line(linetype = "dashed") +
  geom_point(size = 4, alpha = 0.5) +
  scale_y_log10() +
  theme_minimal() +
  theme(axis.title = element_text(size = 24),
        axis.text = element_text(size = 16),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 18)
        )
```

```{r}
#| echo: false

## saving plot
# ggsave("plot/babynames.jpeg",
#        width = 10, height = 6)

## display plot
knitr::include_graphics("plot/babynames.jpeg")
```

<br>

```{.r}
# libraries
library(tidyverse)

## calculating mean hwy per class
mean_hwy_data <- mpg %>% 
  group_by(class) %>% 
  summarise(mean_hwy = mean(hwy, na.rm = TRUE))

ggplot(data = mpg,
       mapping = aes(x = class, y = hwy, color = class)) +
  geom_point(position = "jitter", size = 3, alpha = 0.5) +
  geom_point(data = mean_hwy_data, aes(y = mean_hwy), size = 7) +
  labs(title = "Fuel consumption per class vehicle",
       x = "Class of vehicle",
       y = "Highway fuel consumption") +
  theme_minimal() +
  theme(plot.title = element_text(size = 24),
        axis.title = element_text(size = 24),
        axis.text = element_text(size = 16),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 18)
        )
```


```{r}
#| echo: false

# ggsave(filename = "plot/scatterplot-demo.jpeg",
#        width = 10,
#        height = 7)

knitr::include_graphics("plot/scatterplot-demo.jpeg")
```


<br>

```{.r}
## libraries
library(tidyverse)

## histogram plot

ggplot(data = mpg, 
       mapping = aes(x = displ)) +
  geom_histogram(bins = 10, fill = "cadetblue3", alpha = 0.5) + 
  geom_text(aes(label = after_stat(count)),
            stat = "bin", 
            bins = 10, 
            nudge_y = 2) +
  theme_minimal() +
  theme(axis.text = element_text(size = 14),
        axis.title = element_text(size = 16),
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 16)
        )
```

```{r}
#| echo: false

## saving plot
# ggsave("plot/histogram-demo.jpeg",
#        width = 8,
#        height = 5)

knitr::include_graphics("plot/histogram-demo.jpeg")
```


<br>

```{.r}
## libraries
library(tidyverse)

ggplot(data = mpg, 
       mapping = aes(x = hwy, y = class)) +
  geom_violin(aes(fill = class),
              show.legend = FALSE,
              color = NA,
              alpha = 0.5) +
  geom_boxplot(width = 0.2, 
               fill = NA) +
  scale_fill_viridis_d() +
  theme_minimal() +
  theme(axis.text = element_text(size = 14),
        axis.title = element_text(size = 16),
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 16)
        )
```

```{r}
#| echo: false

# ggsave("plot/violin-plot-demo.jpeg",
#        width = 7,
#        height = 5)

knitr::include_graphics("plot/violin-plot-demo.jpeg")
```


<br>

```{.r}
# libraries
library(tidyverse)

# Create some data
df <- data.frame(supp=rep(c("VC", "OJ"), each=3),
                dose=rep(c("0.5", "1", "2"),2),
                len=c(6.8, 15, 33, 4.2, 10, 29.5))

# barplot
ggplot(df, aes(x = dose, y = len, fill = supp)) + 
  geom_bar(stat = "identity",
           position = "dodge",
           width = 0.5) +
  scale_fill_brewer(palette = "Paired") +
  theme_minimal()
```


```{r}
#| echo: false

# ggsave("plot/barplot-demo.jpeg",
#        width = 7,
#        height = 5)

knitr::include_graphics("plot/barplot-demo.jpeg")
```




